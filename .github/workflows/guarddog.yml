name: GuardDog Full Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  guarddog:
    name: GuardDog - Full Scan (Own Code + Deps)
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install GuardDog
        run: pip install guarddog

      - name: üîç Scan dependencies (package.json)
        id: deps_scan
        continue-on-error: true
        run: |
          guarddog npm verify ./package.json --output-format json > guarddog_deps.json
          count=$(jq '.results | length' guarddog_deps.json)
          echo "count=$count" >> $GITHUB_OUTPUT
          if [ "$count" -gt 0 ]; then
            echo "‚ùå GuardDog found $count dependency issue(s)"
            cat guarddog_deps.json
          else
            echo "‚úÖ No dependency issues found in package.json"
          fi

      - name: üê∂ Local files scan
        id: local_scan
        continue-on-error: true
        run: |
          guarddog npm scan . --output-format json > guarddog_local.json
          count=$(jq '.results | length' guarddog_local.json)
          echo "count=$count" >> $GITHUB_OUTPUT
          if [ "$count" -gt 0 ]; then
            echo "‚ùå GuardDog found $count local issue(s)"
            cat guarddog_local.json
          else
            echo "‚úÖ No local issues found"
          fi

      - name: ‚ùó Final check for failures
        run: |
          deps_count="${{ steps.deps_scan.outputs.count }}"
          local_count="${{ steps.local_scan.outputs.count }}"
          echo "Dependency issues: $deps_count"
          echo "Local issues: $local_count"

          if [ "$deps_count" -gt 0 ] || [ "$local_count" -gt 0 ]; then
            echo "‚ùå GuardDog scan failed"
            exit 1
          else
            echo "‚úÖ All GuardDog scans passed"
          fi
